{"version":3,"file":"reporter.spec.js","sourceRoot":"","sources":["../../../lib/tests/reporter.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { AFTER, BEFORE, FAILED, PASSED, PENDING, TEXT_PLAIN } from '../constants';\nimport {\n  EMPTY_FEATURE, EMPTY_SCENARIO,\n  STEP_HOOK_ONSTART_STATS,\n  STEP_TEST_ONSTART_ARGUMENT_STATS,\n  STEP_TEST_ONSTART_STATS,\n  SUITE_FEATURE_STATS,\n  TEST_EMPTY_STATS,\n//   TEST_SCENARIO_STATS,\n} from './__mocks__/mocks';\nimport { HookStats, RunnerStats, SuiteStats, TestStats } from '@wdio/reporter';\nimport { copySync, readJsonSync, readdirSync, removeSync } from 'fs-extra';\nimport { Metadata } from '../metadata';\nimport { Step } from '../models';\n// import Utils from '../utils';\nimport WdioCucumberJsJsonReporter from '../reporter';\nimport { fileExists } from './fileExists';\n\ndescribe( 'reporter', () => {\n  let tmpReporter: WdioCucumberJsJsonReporter = null;\n\n  beforeEach( () => {\n    tmpReporter = new WdioCucumberJsJsonReporter( {\n      jsonFolder: '.tmp/json-folder/',\n      language: 'en',\n    } );\n  } );\n\n  afterEach( () => {\n    jest.clearAllMocks();\n    EMPTY_FEATURE.elements = [];\n    EMPTY_SCENARIO.steps = [];\n    delete STEP_HOOK_ONSTART_STATS.keyword;\n  } );\n\n  describe( 'on create', () => {\n    it( 'should set the defaults  if no options are provided', () => {\n      const noOptionsReporter = new WdioCucumberJsJsonReporter( {} );\n\n      expect( noOptionsReporter.options ).toMatchSnapshot();\n    } );\n\n    it( 'should verify initial properties', () => {\n      expect( tmpReporter.options ).toMatchSnapshot();\n      expect( tmpReporter.instanceMetadata ).toBeNull();\n      expect( tmpReporter.report ).toMatchSnapshot();\n    } );\n  } );\n\n  describe( 'onRunnerStart', () => {\n    it( 'should set instance data if it is not available yet', () => {\n      const metadata = { foo: 'bar' };\n      const metadataClassObject: Metadata = tmpReporter.metadataClassObject;\n      const determineMetadataSpy: jest.SpyInstance = jest.spyOn( metadataClassObject, 'determineMetadata' ).mockReturnValue( metadata );\n\n      expect( tmpReporter.instanceMetadata ).toBeNull();\n\n      tmpReporter.onRunnerStart( {} as RunnerStats );\n\n      expect( determineMetadataSpy ).toHaveBeenCalled();\n      expect( tmpReporter.instanceMetadata ).toEqual( metadata );\n    } );\n\n    it( 'should set not set instance data if it is already available', () => {\n      const metadata = { foo: 'bar' };\n      const determineMetadataSpy: jest.SpyInstance = jest.spyOn( new Metadata(), 'determineMetadata' ).mockReturnValue( metadata );\n\n      tmpReporter.instanceMetadata = metadata;\n      expect( tmpReporter.instanceMetadata ).toEqual( metadata );\n\n      tmpReporter.onRunnerStart( {} as RunnerStats );\n\n      expect( determineMetadataSpy ).not.toHaveBeenCalled();\n    } );\n  } );\n\n  describe( 'onSuiteStart', () => {\n    it( 'should add the CucumberJS feature object if it is not available', () => {\n      const featureData = { keyword: 'feature' };\n      const getFeatureDataObjectSpy = jest.spyOn( tmpReporter, 'getFeatureDataObject' ).mockReturnValue( featureData );\n\n      expect( tmpReporter.report ).toMatchSnapshot();\n\n      tmpReporter.onSuiteStart( {} as SuiteStats );\n\n      expect( getFeatureDataObjectSpy ).toHaveBeenCalled();\n      expect( tmpReporter.report ).toMatchSnapshot();\n    } );\n\n    it( 'should add instance data to the feature if the feature is already there', () => {\n      const metadata = { foo: 'bar' };\n      const featureData = { keyword: 'feature' };\n      const getFeatureDataObjectSpy = jest.spyOn( tmpReporter, 'getFeatureDataObject' ).mockReturnValue( featureData );\n      jest.spyOn( tmpReporter, 'getScenarioDataObject' ).mockReturnValue( EMPTY_SCENARIO );\n\n      expect( tmpReporter.report ).toMatchSnapshot();\n\n      tmpReporter.instanceMetadata = metadata;\n      tmpReporter.report.feature = EMPTY_FEATURE;\n      tmpReporter.onSuiteStart( {} as SuiteStats );\n\n      expect( getFeatureDataObjectSpy ).not.toHaveBeenCalled();\n      expect( tmpReporter.report ).toMatchSnapshot();\n    } );\n\n    it( 'should add a scenario to the feature if the feature is already there', () => {\n      const getFeatureDataObjectSpy = jest.spyOn( tmpReporter, 'getFeatureDataObject' );\n      const getScenarioDataObjectSpy = jest.spyOn( tmpReporter, 'getScenarioDataObject' ).mockReturnValue( EMPTY_SCENARIO );\n\n      tmpReporter.report.feature = EMPTY_FEATURE;\n\n      expect( tmpReporter.report.feature.elements.length ).toEqual( 0 );\n\n      tmpReporter.onSuiteStart( {} as SuiteStats );\n\n      expect( getFeatureDataObjectSpy ).not.toHaveBeenCalled();\n      expect( getScenarioDataObjectSpy ).toHaveBeenCalledWith( {}, EMPTY_FEATURE.id );\n      expect( tmpReporter.report.feature.elements ).toMatchSnapshot();\n    } );\n  } );\n\n  describe( 'onHookStart', () => {\n    it( 'should call `addStepData` to add a pending before step', () => {\n      const getCurrentScenarioSpy = jest.spyOn( tmpReporter, 'getCurrentScenario' ).mockReturnValue( EMPTY_SCENARIO );\n      const containsStepsSpy = jest.spyOn( tmpReporter.utilsObject, 'containsSteps' ).mockReturnValue( false );\n      const addStepDataSpy = jest.spyOn( tmpReporter, 'addStepData' ).mockReturnValue( );\n\n      tmpReporter.onHookStart( {} as HookStats );\n\n      expect( getCurrentScenarioSpy ).toHaveBeenCalledTimes( 1 );\n      expect( containsStepsSpy ).toHaveBeenCalledTimes( 1 );\n      expect( addStepDataSpy ).toHaveBeenCalledWith( { state: PASSED, keyword: BEFORE } );\n    } );\n\n    it( 'should call `addStepData` to add a pending after step', () => {\n      const getCurrentScenarioSpy = jest.spyOn( tmpReporter, 'getCurrentScenario' ).mockReturnValue( EMPTY_SCENARIO );\n      const containsStepsSpy = jest.spyOn( tmpReporter.utilsObject, 'containsSteps' ).mockReturnValue( true );\n      const addStepDataSpy = jest.spyOn( tmpReporter, 'addStepData' ).mockReturnValue( );\n\n      tmpReporter.onHookStart( {} as HookStats );\n\n      expect( getCurrentScenarioSpy ).toHaveBeenCalledTimes( 1 );\n      expect( containsStepsSpy ).toHaveBeenCalledTimes( 1 );\n      expect( addStepDataSpy ).toHaveBeenCalledWith( { state: PASSED, keyword: AFTER } );\n    } );\n  } );\n\n  describe( 'onHookEnd', () => {\n    it( 'should call update a hook step to passed', () => {\n      const updateStepStatusSpy = jest.spyOn( tmpReporter, 'updateStepStatus' ).mockReturnValue( );\n\n      tmpReporter.onHookEnd( {} as HookStats );\n\n      expect( updateStepStatusSpy ).toHaveBeenCalledWith( { state: PASSED } );\n    } );\n\n    it( 'should call update a hook step to the current state when there is an error', () => {\n\n      const updateStepStatusSpy = jest.spyOn( tmpReporter, 'updateStepStatus' ).mockReturnValue( );\n\n      tmpReporter.onHookEnd( { state: FAILED, error: {} as Error } as HookStats );\n\n      expect( updateStepStatusSpy ).toHaveBeenCalledWith( { state: FAILED, error: {} } );\n    } );\n  } );\n\n  describe( 'onTestStart', () => {\n    it( 'should call `addStepDataSpy` to add a step when a test is started', () => {\n      const addStepDataSpy = jest.spyOn( tmpReporter, 'addStepData' ).mockReturnValue( );\n\n      tmpReporter.onTestStart( { foo: 'bar' } as TestStats );\n\n      expect( addStepDataSpy ).toHaveBeenCalledWith( { foo: 'bar' } );\n    } );\n  } );\n\n  describe( 'onTestPass', () => {\n    it( 'should call update a step', () => {\n      const updateStepStatusSpy = jest.spyOn( tmpReporter, 'updateStepStatus' ).mockReturnValue( );\n\n      tmpReporter.onTestPass( { foo: true } as TestStats );\n\n      expect( updateStepStatusSpy ).toHaveBeenCalledWith( { foo: true } );\n    } );\n  } );\n\n  describe( 'onTestFail', () => {\n    it( 'should call update a step', () => {\n      const updateStepStatusSpy = jest.spyOn( tmpReporter, 'updateStepStatus' ).mockReturnValue( );\n\n      tmpReporter.onTestFail( { bar: true } as TestStats );\n\n      expect( updateStepStatusSpy ).toHaveBeenCalledWith( { bar: true } );\n    } );\n  } );\n\n  describe( 'onTestSkip', () => {\n    it( 'should call update a step', () => {\n      const updateStepStatusSpy = jest.spyOn( tmpReporter, 'updateStepStatus' ).mockReturnValue( );\n\n      tmpReporter.onTestSkip( { bar: false } as TestStats );\n\n      expect( updateStepStatusSpy ).toHaveBeenCalledWith( { bar: false } );\n    } );\n  } );\n\n  describe( 'onRunnerEnd', () => {\n    it( 'should store the json file on the file system', () => {\n      const jsonFolder = './.tmp/ut-folder';\n\n      tmpReporter.report.feature = { id: 'this-feature' };\n      tmpReporter.options.jsonFolder = jsonFolder;\n\n      expect( fileExists( jsonFolder ) ).toEqual( false );\n\n      tmpReporter.onRunnerEnd();\n\n      const files = readdirSync( jsonFolder );\n\n      expect( files.length ).toEqual( 1 );\n      expect( files[0].includes( tmpReporter.report.feature.id ) ).toEqual( true );\n      expect( fileExists( jsonFolder ) ).toEqual( true );\n\n      // Clean up\n      removeSync( jsonFolder );\n    } );\n\n    it( 'should be able to add json to an existing json output', () => {\n      const jsonFolder = './.tmp/ut-folder';\n      const jsonFile = `${jsonFolder}/this-feature.json`;\n\n      copySync( 'lib/tests/__mocks__/mock.json', jsonFile );\n\n      tmpReporter.report.feature = { id: 'this-feature' };\n      tmpReporter.options.jsonFolder = jsonFolder;\n\n      expect( ( readJsonSync( jsonFile ) as any[] ).length ).toEqual( 1 );\n\n      tmpReporter.onRunnerEnd();\n\n      const files = readdirSync( jsonFolder );\n\n      expect( files.length ).toEqual( 1 );\n      expect( ( readJsonSync( jsonFile ) as any[] ).length ).toEqual( 2 );\n\n      // Clean up\n      removeSync( jsonFolder );\n    } );\n  } );\n\n  describe( 'getFeatureDataObject', () => {\n    it( 'should be able to to create a feature JSON data object', () => {\n\n      expect( tmpReporter.getFeatureDataObject( SUITE_FEATURE_STATS ) ).toMatchSnapshot();\n    } );\n  } );\n\n  describe( 'getScenarioDataObject', () => {\n    it( 'should be able to to create a scenario JSON data object', () => {\n\n      expect( tmpReporter.getScenarioDataObject(\n        SUITE_FEATURE_STATS,\n        'create-passed-feature',\n      ) ).toMatchSnapshot();\n    } );\n  } );\n\n  describe( 'getStepDataObject', () => {\n    let getFailedMessageSpy;\n\n    beforeEach( () => {\n      getFailedMessageSpy = jest.spyOn( tmpReporter.utilsObject, 'getFailedMessage' ).mockReturnValue( {} );\n    } );\n\n    it( 'should be able to to create a step JSON data object', () => {\n      expect( tmpReporter.getStepDataObject( STEP_TEST_ONSTART_STATS ) ).toMatchSnapshot();\n      expect( getFailedMessageSpy ).toHaveBeenCalledTimes( 1 );\n    } );\n\n    it( 'should be able to add arguments to the step if they are present', () => {\n      expect( tmpReporter.getStepDataObject( STEP_TEST_ONSTART_ARGUMENT_STATS ) ).toMatchSnapshot();\n      expect( getFailedMessageSpy ).toHaveBeenCalledTimes( 1 );\n    } );\n\n    it( 'should be able to to create a step JSON data object based on a hook', () => {\n      STEP_HOOK_ONSTART_STATS.keyword = BEFORE;\n      expect( tmpReporter.getStepDataObject( STEP_HOOK_ONSTART_STATS ) ).toMatchSnapshot();\n      expect( getFailedMessageSpy ).toHaveBeenCalledTimes( 1 );\n    } );\n\n    it( 'should be able to to create a step JSON data object based on malformed data', () => {\n      expect( tmpReporter.getStepDataObject( TEST_EMPTY_STATS ) ).toMatchSnapshot();\n      expect( getFailedMessageSpy ).toHaveBeenCalled();\n    } );\n  } );\n\n  describe( 'getCurrentScenario', () => {\n    it( 'should return the last number of the scenario array as the current running scenario number', () => {\n      tmpReporter.report.feature = {\n        elements: [{ foo: 'first-scenario' }, { bar: 'second-scenario' }, { foobar: 'current-scenario' }],\n      };\n\n      expect( tmpReporter.getCurrentScenario() ).toEqual( { foobar: 'current-scenario' } );\n    } );\n  } );\n\n  describe( 'getCurrentStep', () => {\n    it( 'should return current running step', () => {\n      const currentScenarioMock = {\n        steps: [\n          { foo: 'first-step' },\n          { foo: 'second-step' },\n          { foo: 'current-step' },\n        ] as Step[],\n      };\n      const getCurrentScenarioSpy = jest.spyOn( tmpReporter, 'getCurrentScenario' ).mockReturnValue( currentScenarioMock );\n\n      expect( tmpReporter.getCurrentStep() ).toEqual( currentScenarioMock.steps[2] );\n      expect( getCurrentScenarioSpy ).toHaveBeenCalledTimes( 1 );\n    } );\n  } );\n\n  describe( 'addStepData', () => {\n    it( 'should add step data to a current scenario', () => {\n      const getCurrentScenarioSpy = jest.spyOn( tmpReporter, 'getCurrentScenario' );\n      const getStepDataObjectSpy = jest.spyOn( tmpReporter, 'getStepDataObject' ).mockReturnValue( { foo: 'current-step' } );\n\n      tmpReporter.report.feature = EMPTY_FEATURE;\n      tmpReporter.report.feature.elements.push( EMPTY_SCENARIO );\n\n      expect( tmpReporter.report.feature.elements[0].steps.length ).toEqual( 0 );\n\n      tmpReporter.addStepData( {} as HookStats );\n\n      expect( tmpReporter.report.feature.elements[0].steps.length ).toEqual( 1 );\n      expect( tmpReporter.report.feature.elements[0].steps ).toMatchSnapshot();\n      expect( getCurrentScenarioSpy ).toHaveBeenCalledTimes( 1 );\n      expect( getStepDataObjectSpy ).toHaveBeenCalledTimes( 1 );\n    } );\n  } );\n\n  describe( 'updateStepStatus', () => {\n    it( 'should update step data of the current scenario step', () => {\n      const pendingStep = { foo: 'current-step', status: PENDING };\n      const updatedStep = { foo: 'current-step', status: PASSED, bar: false };\n      const getCurrentScenarioSpy = jest.spyOn( tmpReporter, 'getCurrentScenario' );\n      const getStepDataObjectSpy = jest.spyOn( tmpReporter, 'getStepDataObject' ).mockReturnValue( updatedStep );\n      const getCurrentStepSpy = jest.spyOn( tmpReporter, 'getCurrentStep' ).mockReturnValue( { foo: 'current-step' } );\n\n      tmpReporter.report.feature = EMPTY_FEATURE;\n      tmpReporter.report.feature.elements.push( EMPTY_SCENARIO );\n      tmpReporter.report.feature.elements[0].steps.push( pendingStep );\n\n      expect( tmpReporter.report.feature.elements[0].steps ).toMatchSnapshot();\n      expect( tmpReporter.report.feature.elements[0].steps.length ).toEqual( 1 );\n\n      tmpReporter.updateStepStatus( {} as TestStats );\n\n      expect( tmpReporter.report.feature.elements[0].steps ).toMatchSnapshot();\n      expect( tmpReporter.report.feature.elements[0].steps.length ).toEqual( 1 );\n      expect( getCurrentScenarioSpy ).toHaveBeenCalledTimes( 1 );\n      expect( getStepDataObjectSpy ).toHaveBeenCalledTimes( 1 );\n      expect( getCurrentStepSpy ).toHaveBeenCalledTimes( 1 );\n    } );\n  } );\n\n  describe( 'attach', () => {\n    let mockStdout: jest.SpyInstance;\n    beforeAll( () => {\n    //   process.emit = jest.fn();\n      mockStdout = jest.spyOn( process, 'emit' ).mockImplementation( );\n\n\n    } );\n\n    afterEach( () => {\n    //   process.emit.mockClear();\n      mockStdout.mockClear();\n    } );\n\n    it( 'should be able to attach default data', () => {\n      WdioCucumberJsJsonReporter.attach( 'foo' );\n\n      expect( mockStdout ).toHaveBeenCalledTimes( 1 );\n      expect( mockStdout ).toHaveBeenCalledWith( 'wdioCucumberJsReporter:attachment', {\n        data: 'foo',\n        type: TEXT_PLAIN\n      } );\n    } );\n\n    it( 'should be able to attach with all data', () => {\n      WdioCucumberJsJsonReporter.attach( 'foo', 'type/string' );\n\n      expect( mockStdout ).toHaveBeenCalledTimes( 1 );\n      expect( mockStdout ).toHaveBeenCalledWith( 'wdioCucumberJsReporter:attachment', {\n        data: 'foo',\n        type: 'type/string'\n      } );\n    } );\n  } );\n\n  describe( 'cucumberJsAttachment', () => {\n    it( 'should be able to add embeddings to a current step when they have not been added', () => {\n      const pendingStep = { foo: 'current-step', status: PENDING };\n      const getCurrentStepSpy = jest.spyOn( tmpReporter, 'getCurrentStep' ).mockReturnValue( pendingStep );\n\n      tmpReporter.report.feature = EMPTY_FEATURE;\n      tmpReporter.report.feature.elements.push( EMPTY_SCENARIO );\n      tmpReporter.report.feature.elements[0].steps.push( pendingStep );\n\n      expect( tmpReporter.report.feature.elements[0].steps[0] ).toMatchSnapshot();\n\n      tmpReporter.cucumberJsAttachment( { data: 'data', type: 'mime_type' } );\n\n      expect( tmpReporter.report.feature.elements[0].steps[0] ).toMatchSnapshot();\n      expect( getCurrentStepSpy ).toHaveBeenCalledTimes( 1 );\n    } );\n\n    it( 'should be able to add embeddings to a current step which already has embeddings', () => {\n      const pendingStep = {\n        foo: 'current-step',\n        status: PENDING,\n        embeddings: [{ data: 'data-1', mime_type: 'mime_type-1' }]\n      };\n      const getCurrentStepSpy = jest.spyOn( tmpReporter, 'getCurrentStep' ).mockReturnValue( pendingStep );\n\n      tmpReporter.report.feature = EMPTY_FEATURE;\n      tmpReporter.report.feature.elements.push( EMPTY_SCENARIO );\n      tmpReporter.report.feature.elements[0].steps.push( pendingStep );\n\n      expect( tmpReporter.report.feature.elements[0].steps[0] ).toMatchSnapshot();\n\n      tmpReporter.cucumberJsAttachment( { data: 'data-2', type: 'mime_type-2' } );\n\n      expect( tmpReporter.report.feature.elements[0].steps[0] ).toMatchSnapshot();\n      expect( getCurrentStepSpy ).toHaveBeenCalledTimes( 1 );\n    } );\n  } );\n} );\n"]}